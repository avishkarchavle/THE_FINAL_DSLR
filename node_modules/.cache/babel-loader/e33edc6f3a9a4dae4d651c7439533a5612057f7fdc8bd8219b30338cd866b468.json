{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grish\\\\OneDrive\\\\Desktop\\\\tpdslr\\\\dslrbackup-main\\\\src\\\\components\\\\SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [videoInput, setVideoInput] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const videoRef = useRef(null);\n  const speechSynthesisRef = useRef(window.speechSynthesis);\n  const handleVideoChange = event => {\n    const file = event.target.files[0];\n    setVideoInput(file);\n    console.log(\"Video file selected: \", file);\n  };\n  const handleStopWebcam = () => {\n    if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n      mediaRecorder.stop();\n      setMediaRecorder(null);\n      setIsRecording(false);\n      if (videoRef.current && videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject;\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n        videoRef.current.srcObject = null;\n      }\n    }\n  };\n  const handleDataAvailable = event => {\n    if (event.data.size > 0) {\n      const videoBlob = new Blob([event.data], {\n        type: 'video/webm'\n      });\n      setVideoInput(videoBlob);\n      console.log(\"Video blob created: \", videoBlob);\n    }\n  };\n\n  // const handlePredict = async () => {\n  //     try {\n  //         const formData = new FormData();\n  //         if (videoInput instanceof Blob) {\n  //             formData.append('video', videoInput, 'video.webm');\n  //             console.log(\"Video blob appended to formData\");\n  //         } else {\n  //             alert('Please provide a video input');\n  //             return;\n  //         }\n\n  //         console.log(\"Sending request to backend...\");\n  //         const response = await axios.post('http://localhost:5001/predict', formData, {\n  //             headers: {\n  //                 'Content-Type': 'multipart/form-data',\n  //             },\n  //         });\n\n  //         console.log(\"Response received: \", response.data);\n  //         setPrediction(response.data.prediction);\n  //         speakText(response.data.prediction);\n  //     } catch (error) {\n  //         console.error('Error predicting:', error);\n  //     }\n  // };\n\n  const speakText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    speechSynthesisRef.current.speak(utterance);\n  };\n  useEffect(() => {\n    const synth = speechSynthesisRef.current;\n    return () => {\n      if (isSpeaking) {\n        synth.cancel();\n      }\n    };\n  }, [isSpeaking]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"display-4 mb-4\",\n      children: \"Sign Language Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: handleStopWebcam,\n        children: \"Stop Webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handlePredict,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${isSpeaking ? 'btn-danger' : 'btn-success'}`,\n        onClick: () => setIsSpeaking(!isSpeaking),\n        children: isSpeaking ? 'Stop Speaking' : 'Speak'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        width: \"640\",\n        height: \"480\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"J75f6poIwSqxB9YOBr3aRFGW7ko=\");\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","mediaRecorder","setMediaRecorder","videoInput","setVideoInput","prediction","setPrediction","isRecording","setIsRecording","isSpeaking","setIsSpeaking","videoRef","speechSynthesisRef","window","speechSynthesis","handleVideoChange","event","file","target","files","console","log","handleStopWebcam","state","stop","current","srcObject","stream","tracks","getTracks","forEach","track","handleDataAvailable","data","size","videoBlob","Blob","type","speakText","text","utterance","SpeechSynthesisUtterance","speak","synth","cancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","handlePredict","ref","width","height","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["C:/Users/grish/OneDrive/Desktop/tpdslr/dslrbackup-main/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst SignLanguageRecognition = () => {\n    const [mediaRecorder, setMediaRecorder] = useState(null);\n    const [videoInput, setVideoInput] = useState(null);\n    const [prediction, setPrediction] = useState('');\n    const [isRecording, setIsRecording] = useState(false);\n    const [isSpeaking, setIsSpeaking] = useState(false);\n\n    const videoRef = useRef(null);\n    const speechSynthesisRef = useRef(window.speechSynthesis);\n\n    const handleVideoChange = (event) => {\n        const file = event.target.files[0];\n        setVideoInput(file);\n        console.log(\"Video file selected: \", file);\n    };\n\n    const handleStopWebcam = () => {\n        if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n            mediaRecorder.stop();\n            setMediaRecorder(null);\n            setIsRecording(false);\n\n            if (videoRef.current && videoRef.current.srcObject) {\n                const stream = videoRef.current.srcObject;\n                const tracks = stream.getTracks();\n                tracks.forEach(track => track.stop());\n                videoRef.current.srcObject = null;\n            }\n        }\n    };\n\n    const handleDataAvailable = (event) => {\n        if (event.data.size > 0) {\n            const videoBlob = new Blob([event.data], { type: 'video/webm' });\n            setVideoInput(videoBlob);\n            console.log(\"Video blob created: \", videoBlob);\n        }\n    };\n\n    // const handlePredict = async () => {\n    //     try {\n    //         const formData = new FormData();\n    //         if (videoInput instanceof Blob) {\n    //             formData.append('video', videoInput, 'video.webm');\n    //             console.log(\"Video blob appended to formData\");\n    //         } else {\n    //             alert('Please provide a video input');\n    //             return;\n    //         }\n\n    //         console.log(\"Sending request to backend...\");\n    //         const response = await axios.post('http://localhost:5001/predict', formData, {\n    //             headers: {\n    //                 'Content-Type': 'multipart/form-data',\n    //             },\n    //         });\n\n    //         console.log(\"Response received: \", response.data);\n    //         setPrediction(response.data.prediction);\n    //         speakText(response.data.prediction);\n    //     } catch (error) {\n    //         console.error('Error predicting:', error);\n    //     }\n    // };\n\n    const speakText = (text) => {\n        const utterance = new SpeechSynthesisUtterance(text);\n        speechSynthesisRef.current.speak(utterance);\n    };\n\n    useEffect(() => {\n        const synth = speechSynthesisRef.current;\n        return () => {\n            if (isSpeaking) {\n                synth.cancel();\n            }\n        };\n    }, [isSpeaking]);\n\n    return (\n        <div className=\"container mt-5\">\n            <h2 className=\"display-4 mb-4\">Sign Language Recognition</h2>\n            <div className=\"mb-3\">\n                <label>Upload Video:</label>\n                <input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\n            </div>\n            {isRecording && (\n                <div className=\"mb-3\">\n                    <button className=\"btn btn-danger\" onClick={handleStopWebcam}>\n                        Stop Webcam\n                    </button>\n                </div>\n            )}\n            <div className=\"mb-3\">\n                <button className=\"btn btn-success\" onClick={handlePredict}>\n                    Predict\n                </button>\n            </div>\n            {prediction && (\n                <div className=\"mt-3\">\n                    <p>Prediction: {prediction}</p>\n                    <button\n                        className={`btn ${isSpeaking ? 'btn-danger' : 'btn-success'}`}\n                        onClick={() => setIsSpeaking(!isSpeaking)}\n                    >\n                        {isSpeaking ? 'Stop Speaking' : 'Speak'}\n                    </button>\n                </div>\n            )}\n            {isRecording && (\n                <div className=\"mt-3\">\n                    <video\n                        ref={videoRef}\n                        width=\"640\"\n                        height=\"480\"\n                        autoPlay\n                        playsInline\n                        muted={true}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}