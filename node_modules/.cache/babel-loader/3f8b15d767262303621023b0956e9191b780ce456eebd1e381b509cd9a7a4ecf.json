{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grish\\\\OneDrive\\\\Desktop\\\\tpdslr\\\\dslrbackup-main\\\\src\\\\components\\\\SignLanguageRecognition.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignLanguageRecognition = () => {\n  _s();\n  const [videoInput, setVideoInput] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const videoRef = useRef(null);\n  const speechSynthesisRef = useRef(window.speechSynthesis);\n  const utteranceRef = useRef(null);\n  const handleVideoChange = event => {\n    const file = event.target.files[0];\n    setVideoInput(file);\n    console.log(\"Video file selected: \", file);\n  };\n  const handlePredict = async () => {\n    try {\n      const formData = new FormData();\n      if (videoInput instanceof Blob) {\n        formData.append('video', videoInput, 'video.webm');\n        console.log(\"Video blob appended to formData\");\n      } else {\n        alert('Please provide a video input');\n        return;\n      }\n      console.log(\"Sending request to backend...\");\n      const response = await axios.post('http://localhost:5000/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Response received: \", response.data);\n      setPrediction(response.data.prediction);\n      speakText(response.data.prediction);\n    } catch (error) {\n      console.error('Error predicting:', error);\n    }\n  };\n  const speakText = text => {\n    utteranceRef.current = new SpeechSynthesisUtterance(text);\n    speechSynthesisRef.current.speak(utteranceRef.current);\n    setIsSpeaking(true);\n  };\n  const stopSpeaking = () => {\n    if (isSpeaking) {\n      speechSynthesisRef.current.cancel();\n      setIsSpeaking(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"display-4 mb-4\",\n      children: \"Sign Language Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handlePredict,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${isSpeaking ? 'btn-danger' : 'btn-success'}`,\n        onClick: () => {\n          if (isSpeaking) {\n            stopSpeaking();\n          } else {\n            speakText(prediction);\n          }\n        },\n        children: isSpeaking ? 'Stop Speaking' : 'Speak'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(SignLanguageRecognition, \"+bu4bLDJA+lk3HBDiIRT6UKclFY=\");\n_c = SignLanguageRecognition;\nexport default SignLanguageRecognition;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageRecognition\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","SignLanguageRecognition","_s","videoInput","setVideoInput","prediction","setPrediction","isSpeaking","setIsSpeaking","videoRef","speechSynthesisRef","window","speechSynthesis","utteranceRef","handleVideoChange","event","file","target","files","console","log","handlePredict","formData","FormData","Blob","append","alert","response","post","headers","data","speakText","error","text","current","SpeechSynthesisUtterance","speak","stopSpeaking","cancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/grish/OneDrive/Desktop/tpdslr/dslrbackup-main/src/components/SignLanguageRecognition.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\n\nconst SignLanguageRecognition = () => {\n    const [videoInput, setVideoInput] = useState(null);\n    const [prediction, setPrediction] = useState('');\n    const [isSpeaking, setIsSpeaking] = useState(false);\n\n    const videoRef = useRef(null);\n    const speechSynthesisRef = useRef(window.speechSynthesis);\n    const utteranceRef = useRef(null);\n\n    const handleVideoChange = (event) => {\n        const file = event.target.files[0];\n        setVideoInput(file);\n        console.log(\"Video file selected: \", file);\n    };\n\n    const handlePredict = async () => {\n        try {\n            const formData = new FormData();\n            if (videoInput instanceof Blob) {\n                formData.append('video', videoInput, 'video.webm');\n                console.log(\"Video blob appended to formData\");\n            } else {\n                alert('Please provide a video input');\n                return;\n            }\n\n            console.log(\"Sending request to backend...\");\n            const response = await axios.post('http://localhost:5000/predict', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            console.log(\"Response received: \", response.data);\n            setPrediction(response.data.prediction);\n            speakText(response.data.prediction);\n        } catch (error) {\n            console.error('Error predicting:', error);\n        }\n    };\n\n    const speakText = (text) => {\n        utteranceRef.current = new SpeechSynthesisUtterance(text);\n        speechSynthesisRef.current.speak(utteranceRef.current);\n        setIsSpeaking(true);\n    };\n\n    const stopSpeaking = () => {\n        if (isSpeaking) {\n            speechSynthesisRef.current.cancel();\n            setIsSpeaking(false);\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <h2 className=\"display-4 mb-4\">Sign Language Recognition</h2>\n            <div className=\"mb-3\">\n                <label>Upload Video:</label>\n                <input type=\"file\" accept=\"video/*\" onChange={handleVideoChange} />\n            </div>\n            <div className=\"mb-3\">\n                <button className=\"btn btn-success\" onClick={handlePredict}>\n                    Predict\n                </button>\n            </div>\n            {prediction && (\n                <div className=\"mt-3\">\n                    <p>Prediction: {prediction}</p>\n                    <button\n                        className={`btn ${isSpeaking ? 'btn-danger' : 'btn-success'}`}\n                        onClick={() => {\n                            if (isSpeaking) {\n                                stopSpeaking();\n                            } else {\n                                speakText(prediction);\n                            }\n                        }}\n                    >\n                        {isSpeaking ? 'Stop Speaking' : 'Speak'}\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SignLanguageRecognition;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}